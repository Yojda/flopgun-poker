generator client {
  provider        = "prisma-client-js"
  output          = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model problem {
  id           Int            @id @default(autoincrement())
  title        String         @db.VarChar(255)
  difficulty   String         @db.VarChar(50)
  categories   String[]
  description  String
  replayerurl  String?        @db.VarChar(255)
  options      Json?
  solution     String?
  explanation  String?
  created_at   DateTime?      @default(now()) @db.Timestamp(6)
  updated_at   DateTime?      @default(now()) @db.Timestamp(6)
  problemstate problemstate[]
  attempts     attempts[]
}

model problemstate {
  id             Int       @id @default(autoincrement())
  problem_id     Int
  user_id        Int
  state          String?   @db.VarChar(255)
  countdown_start DateTime? @db.Timestamp(6)
  created_at     DateTime? @default(now()) @db.Timestamp(6)
  updated_at     DateTime? @default(now()) @db.Timestamp(6)
  problem        problem   @relation(fields: [problem_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users          users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model attempts {
  id         Int       @id @default(autoincrement())
  problem_id Int
  user_id    Int
  answer     String    @db.VarChar(255)
  is_correct Boolean
  submitted_at DateTime @default(now()) @db.Timestamp(6)
  problem    problem   @relation(fields: [problem_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id           Int            @id @default(autoincrement())
  username     String         @unique @db.VarChar(50)
  password     String         @db.VarChar(255)
  email        String         @unique @db.VarChar(100)
  created_at   DateTime?      @default(now()) @db.Timestamp(6)
  problemstate problemstate[]
  attempts     attempts[]
}
